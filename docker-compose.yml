version: '3.9'
services:
    server:
        container_name: tasktech-nginx
        image: nginx:1.15-alpine
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
        ports:
            - ${SERVER_PORT}:80
        depends_on:
            - fpm
        networks:
            - tasktech
    db:
        container_name: tasktech-pgsql
        image: postgres:13.3
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./docker/data/postgres:/var/lib/postgresql/data
        ports:
            - ${DB_PORT}:5432
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready  -U ${DB_USERNAME} -d ${DB_DATABASE}'" ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - tasktech
    pgadmin:
        container_name: tasktech-pgadmin
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - ${PGADMIN_PORT}:80
        networks:
            - tasktech
    fpm:
        container_name: tasktech-fpm
        build:
            context: .
            dockerfile: docker/fpm/Dockerfile
        depends_on:
            - db
        volumes:
            - ./:/var/www
        networks:
            - tasktech
    redis:
        container_name: tasktech-redis
        image: redis:8.0.0
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:6379
        command: redis-server --save 20 1 --loglevel warning
        volumes:
            - ./docker/data/redis:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - tasktech
networks:
    tasktech:
        driver: bridge
